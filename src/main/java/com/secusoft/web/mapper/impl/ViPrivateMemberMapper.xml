<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.secusoft.web.mapper.ViPrivateMemberMapper">

    <!-- 定义查询订单关联用户的 resultMap,将整个的查询结果映射到com.mybatis.entity.Orders中 -->
    <resultMap type="com.secusoft.web.model.ViPrivateMemberBean" id="ViPrivateMemberResultMap">
        <!-- 配置映射的订单信息 -->

        <!-- id:查询列中的唯一标识,订单信息中的唯一标识，如果多列组成唯一标识(如：一般数据库设计中的字典表 使用联合主键)，就需要配置多个id
            column:订单信息的唯一标识 列
            property:订单信息的唯一标识列所映射到orders中的那个属性(假如：数据库中orders表中的主键为orders_id,而实体属性名称为ordersId,
                则这个配置应为<id column="orders_id" property="ordersId"/>,类似hibernate实体映射文件配置)。
        -->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="object_id" property="objectId" jdbcType="VARCHAR" />
        <result column="identity_name" property="identityName" jdbcType="VARCHAR" />
        <result column="identity_id" property="identityId" jdbcType="VARCHAR" />
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
        <result column="repo_id" property="repoId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="valid_state" property="validState" jdbcType="INTEGER" />
        <!-- 配置映射的关联用户信息 -->

        <!--association:用于映射关联查询单个对象的信息
            property:要将关联查询的用户信息映射到表中那个属性
          -->
        <association property="viRepoBean" javaType="com.secusoft.web.model.ViRepoBean">
            <!-- id:关联查询用户的唯一标识
                column:指定唯一标识用户信息的列
                property:映射到user的那个属性
            -->

            <id column="viRepo_id" property="id" jdbcType="INTEGER" />
            <result column="bkdesc" property="bkdesc" jdbcType="VARCHAR" />
            <result column="bktype" property="bktype" jdbcType="CHAR" />
            <result column="bkname" property="bkname" jdbcType="VARCHAR" />
            <result column="police_station_id" property="policeStationId" jdbcType="VARCHAR" />
            <result column="table_name" property="tableName" jdbcType="VARCHAR" />
            <result column="type" property="type" jdbcType="INTEGER" />
            <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
            <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
            <result column="valid_state" property="validState" jdbcType="INTEGER" />
        </association>
    </resultMap>

    <insert id="insertViPrivateMember" parameterType="com.secusoft.web.model.ViPrivateMemberBean" keyProperty="id" useGeneratedKeys="true">

      INSERT INTO vi_private_member(object_id,identity_name,identity_id,image_url,repo_id,description)
        VALUES(#{objectId},#{identityName},#{identityId},#{imageUrl},#{repoId},#{description})
    </insert>

     <update id="updateViPrivateMember" parameterType="com.secusoft.web.model.ViPrivateMemberBean">
         update vi_private_member
         <set>
             <if test="identityName != null">
                 identity_name=#{identityName},
             </if>
             <if test="identityId != null">
                 identity_id=#{identityId},
             </if>
             <if test="imageUrl != null">
                 image_url=#{imageUrl},
             </if>
             <if test="description != null">
                 description=#{description},
             </if>
             <if test="objectId != null">
                 object_id=#{objectId},
             </if>
             <if test="validState != null">
                 valid_state=#{validState},
             </if>
             <if test="modifyTime != null">
                 modify_time=#{modifyTime},
             </if>
         </set>
         where id=#{id}
     </update>

    <update id="delViPrivateMember" parameterType="Integer">
        update vi_private_member set valid_state=0
         where id=#{id}
    </update>
    
    <select id="getAllViPrivateMember" parameterType="com.secusoft.web.model.ViPrivateMemberVo" resultType="com.secusoft.web.model.ViMemberVo">
        select * from vi_private_member
        <where>
            valid_state=1
            <if test="repoId!=null">
                and repo_id=#{repoId}
            </if>
            <if test="searchValue!=null">
                and identity_name like CONCAT(CONCAT('%', #{searchValue}), '%')
            </if>
        </where>
    </select>

    <select id="getViPrivateMemberByBean" parameterType="com.secusoft.web.model.ViPrivateMemberBean" resultMap="ViPrivateMemberResultMap">
        select vpm.*,vr.id as viRepo_id,vr.bkdesc,vr.bktype,vr.bkname,vr.police_station_id,vr.table_name,vr.type,vr.gmt_create,vr.gmt_modified,vr.valid_state
        from vi_private_member vpm
        left join vi_repo vr on vpm.repo_id=vr.id
        <where>
            <if test="objectId!=null">
               and object_id=#{objectId}
            </if>
            <if test="id!=null">
                and id=#{id}
            </if>
        </where>
    </select>


    <select id="getInfoSearchMember" parameterType="com.secusoft.web.model.ViPrivateMemberVo" resultType="com.secusoft.web.model.ViMemberVo">
        select content,image_url,identity_id,identity_name,repo_id,create_time,vr.bkname,vr.type from
        ((select content,image_url,identity_id,identity_name,repo_id,create_time from vi_basic_member)union all
        (select "" as content,image_url,identity_id,identity_name,repo_id,create_time from vi_private_member))a
        left join vi_repo vr on vr.id=a.repo_id
        <where>
            <if test="searchValue!=null">
                or identity_id like CONCAT(CONCAT('%', #{searchValue}), '%')
                or identity_name like CONCAT(CONCAT('%', #{searchValue}), '%')
            </if>
        </where>
        order by create_time desc
    </select>
</mapper>