<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.secusoft.web.mapper.PictureMapper">
    <!-- Picture的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Picture_Map" type="com.secusoft.web.model.PictureBean">
        <id column="id" property="id" />
        <result column="picture_id" property="pictureId" />
        <result column="orig_image_url" property="origImageUrl" />
        <result column="crop_image_url" property="cropImageUrl" />
        <result column="ori_image_signed_url" property="oriImageSignedUrl" />
        <result column="crop_image_signed_url" property="cropImageSignedUrl" />
        <result column="picture_time" property="pictureTime" />
        <result column="device_id" property="deviceId" />
        <result column="folder_id" property="folderId" />
        <result column="pic_type" property="picType" />
        <result column="score" property="score" />
    </resultMap>

    <!-- 关联查询映射-->
    <resultMap id="picture_Device_Map" type="PictureBean">
        <id column="ID" property="id"/>
        <result column="picture_id" property="pictureId" />
        <result column="orig_image_url" property="origImageUrl" />
        <result column="crop_image_url" property="cropImageUrl" />
        <result column="ori_image_signed_url" property="oriImageSignedUrl" />
        <result column="crop_image_signed_url" property="cropImageSignedUrl" />
        <result column="picture_time" property="pictureTime" />
        <result column="device_id" property="deviceId" />
        <result column="pic_type" property="picType" />
        <result column="score" property="score" />
        <collection column="device_id" property="deviceBean" ofType="deviceBean"
                    select="com.secusoft.web.mapper.DeviceMapper.selectDeviceByPid">
        </collection>
    </resultMap>

    <!-- 数据库中表名为:vi_picture的列名,as前是数据库的列名,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="vi_picture_Column">
        vi_picture.id as id
        ,vi_picture.picture_id as picture_id
        ,vi_picture.orig_image_url as orig_image_url
        ,vi_picture.crop_image_url as crop_image_url
        ,vi_picture.ori_image_signed_url as ori_image_signed_url
        ,vi_picture.crop_image_signed_url as crop_image_signed_url
        ,vi_picture.picture_time as picture_time
        ,vi_picture.device_id as device_id
        ,vi_picture.folder_id as folder_id
        ,vi_picture.pic_type as pic_type
        ,vi_picture.score as score
        ,vi_picture.local_ori_image_url as local_ori_image_url
        ,vi_picture.local_crop_image_url as local_crop_image_url
    </sql>

    <!-- 获得一个Picture对象,以参数Picture对象中不为空的属性作为条件进行查询-->
    <select id="selectPictureByObj" parameterType="com.secusoft.web.model.PictureBean" resultMap="result_Picture_Map">
        select 
            <include refid="vi_picture_Column" /> 
        from vi_picture
        <where>
            <if test="score != null "> and vi_picture.score = #{score}</if>
            <if test="picType != null "> and vi_picture.pic_type = #{picType}</if>
            <if test="folderId != null "> and vi_picture.folder_id = #{folderId}</if>
            <if test="deviceId != null "> and vi_picture.device_id = #{deviceId}</if>
            <if test="pictureTime != null "> and vi_picture.picture_time = #{pictureTime}</if>
            <if test="cropImageSignedUrl != null "> and vi_picture.crop_image_signed_url = #{cropImageSignedUrl}</if>
            <if test="oriImageSignedUrl != null "> and vi_picture.ori_image_signed_url = #{oriImageSignedUrl}</if>
            <if test="cropImageUrl != null "> and vi_picture.crop_image_url = #{cropImageUrl}</if>
            <if test="origImageUrl != null "> and vi_picture.orig_image_url = #{origImageUrl}</if>
            <if test="id != null "> and vi_picture.id = #{id}</if>
        </where>
    </select> 



    <!-- 将Picture插入到对应数据库的表中,包括属性值为null的数据-->
    <insert id="insertPicture" parameterType="com.secusoft.web.model.PictureBean">
        insert into vi_picture(id,picture_id,orig_image_url,crop_image_url,ori_image_signed_url,crop_image_signed_url,picture_time,device_id,folder_id,pic_type,score,local_ori_image_url,local_crop_image_url)
        values(#{id},#{pictureId},#{origImageUrl},#{cropImageUrl},#{oriImageSignedUrl},#{cropImageSignedUrl},#{pictureTime},#{deviceId},#{folderId},#{picType},#{score},#{localOriImageUrl},#{localCropImageUrl})
    </insert>

    <insert id="insertMorePicture" useGeneratedKeys="true" keyProperty="id"
            parameterType="java.util.List">
        insert into vi_picture(picture_id,orig_image_url,crop_image_url,ori_image_signed_url,crop_image_signed_url,picture_time,device_id,folder_id,pic_type,score,local_ori_image_url,local_crop_image_url)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.pictureId},#{item.origImageUrl},#{item.cropImageUrl},#{item.oriImageSignedUrl},#{item.cropImageSignedUrl},#{item.pictureTime},#{item.deviceId},#{item.folderId},#{item.picType},#{item.score},#{localOriImageUrl},#{localCropImageUrl})
        </foreach>
    </insert>


    <!-- 通过Picture的id将数据库表中对应的数据删除-->
    <delete id="deleteMorePictureById" parameterType="java.lang.String">
        delete from vi_picture
        where id in(
        <foreach collection="pids" item="item" index="index" separator=",">
            #{item}
        </foreach>)
    </delete>

    <delete id="deletePictureById" parameterType="java.lang.String">
        delete from vi_picture
        where id = #{id}
    </delete>


    <!-- 通过Picture的id获得对应数据库中表的数据对象-->
    <select id="selectPictureById" parameterType="java.lang.String" resultMap="result_Picture_Map">
        SELECT p.id,p.picture_id,p.orig_image_url,p.crop_image_url,p.ori_image_signed_url,p.crop_image_signed_url,p.picture_time,folder_id,p.pic_type,score,d.id as did,d.device_id,d.parent_id,device_name,type,ip,`port`,longitude,latitude
        FROM vi_picture p LEFT JOIN vi_device d on p.device_id = d.device_id
        where p.id = #{id}
    </select>


    <!--查找相应文件夹下的所有的收藏图片-->
    <select id="selectPictureByFid" parameterType="java.lang.String" resultMap="picture_Device_Map">
        select
        <include refid="vi_picture_Column" />
        from vi_picture
        where folder_id =#{fid} and pic_type = 0
    </select>


    <!-- 关联查询 -->
    <select id="selectPictureByTid" parameterType="java.lang.String" resultMap="picture_Device_Map">
       SELECT p.id,p.picture_id,orig_image_url,crop_image_url,ori_image_signed_url,crop_image_signed_url,picture_time,device_id,score,pic_type,tp.track_id,local_ori_image_url,local_crop_image_url
       FROM vi_picture p left JOIN vi_track_picture tp on p.id=tp.picture_id
      where track_id=#{trackid}
    </select>


</mapper>